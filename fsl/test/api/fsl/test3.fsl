// =========================================================
// =========================================================
fusion fs1 {
  
  isa       rv64g 
  uarch     oly1
  input_seq in_seq
  sequence seq1(in_seq,rv64g) 
  constraints cons1(seq1,in_seq,rv64g,oly1)
  transform t1(seq1,cons1)
    
}   
    
//proto sequence _id_(input_seq,isa)
sequence seq1(in_seq,rv64g) {
  c.lui    g1, c1
  c.addi   g1, g1, c2
  c.xor    g2, g2, g1
  c.slli   g2, g2, c3
  c.srli   g2,     c3
} 
    
//proto constraints _id_(sequence,input_seq,isa,uarch)
constraints cons1(seq1,in_seq,rv64g,oly1) {
  gpr g1,g2
  g1 != g2 
}     
      
//proto transform _id_(sequence,constraints)
transform t1(seq1,cons1) {
  encoding word1(seq1,opc=0x234)
//  emit(word1)
} 

//proto encoding _id_(sequence,constant)
encoding word1(seq1,opc) {
  u10 opc    //57:48   unsigned 10b
  u6  c3     //47:42   unsigned 6b
  s12 c2     //41:30   signed 12b
  s20 c1     //29:10   signed 20b
  gpr g1     //9:5     gpr 5b
  gpr g2     //4:0     gpr 5b

  //this is an operator not a function
  encode_order(opc,c3,c2,c1,g1,g2)
}
