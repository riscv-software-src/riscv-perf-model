# Board Configuration for Spike RISC-V Simulator
# Supports tagged sections for different platforms and workloads

[DEFAULT]
# Base configuration that applies to all builds
board = spike
cc = riscv32-unknown-elf-gcc
cpu_mhz = 1
warmup_heat = 1

# Default defines (space-separated)  
defines = SPIKE=1 CPU_MHZ=1 WARMUP_HEAT=1

[rv32.baremetal]
# RV32 baremetal build configuration
cc = riscv32-unknown-elf-gcc
arch = rv32imafdc
abi = ilp32d
base_cflags = -march=rv32imafdc -mabi=ilp32d -mcmodel=medany -mno-relax -mstrict-align
base_ldflags = -march=rv32imafdc -mabi=ilp32d -nostartfiles -Wl,--no-warn-rwx-segments
linker_script = link.ld
libs = -lc -lm
includes = 

[rv64.baremetal]
# RV64 baremetal build configuration  
cc = riscv64-unknown-elf-gcc
arch = rv64imafdc
abi = lp64d
base_cflags = -march=rv64imafdc -mabi=lp64d -mcmodel=medany -mno-relax -mstrict-align
base_ldflags = -march=rv64imafdc -mabi=lp64d -nostartfiles -Wl,--no-warn-rwx-segments
linker_script = link.ld
libs = -lc -lm
includes = 

[rv32.linux]
# RV32 Linux build configuration
cc = riscv64-linux-gnu-gcc
arch = rv32imafdc
abi = ilp32d
base_cflags = -march=rv32imafdc -mabi=ilp32d -static -O2
base_ldflags = -march=rv32imafdc -mabi=ilp32d -static
libs = -lm
includes = 

[rv64.linux]
# RV64 Linux build configuration
cc = riscv64-linux-gnu-gcc
arch = rv64imafdc
abi = lp64d
base_cflags = -march=rv64imafdc -mabi=lp64d -static -O2
base_ldflags = -march=rv64imafdc -mabi=lp64d -static
libs = -lm
includes = 

[embench-iot]
# Embench IoT specific flags, -Dtrue=1 and -Dfalse=0 to fix wikisort
workload_cflags = -Dtrue=1 -Dfalse=0 -I/workloads/embench-iot/support/
workload_ldflags = 
workload_defines = 
workload_includes = 
workload_sources = /workloads/embench-iot/support/beebsc.c
environment_files = crt0.S main.c stub.c util.c

[riscv-tests]
# RISC-V tests specific flags
workload_cflags = -std=gnu99 -Wno-implicit-int -Wno-implicit-function-declaration
workload_ldflags = 
workload_defines = 
workload_includes = benchmarks/common
environment_files = crt0.S main.c stub.c util.c

[dhrystone]
# Dhrystone specific flags (inherits from riscv-tests)
parent = riscv-tests
# Its preferred in Dhrystone to not patch the source code and fix errors using compiler flags
workload_cflags = -std=gnu99 -Wno-implicit-int -Wno-implicit-function-declaration


[linux.embench-iot]
# Linux-specific embench overrides
workload_cflags = -std=gnu99
skip_environment = true

[linux.riscv-tests]
# Linux-specific riscv-tests overrides
workload_cflags = -std=gnu99
skip_common_files = syscalls.c
skip_environment = true

[bbv]
# BBV-specific configuration
bbv_cflags = -DBBV
bbv_ldflags = 

[trace]
# Trace-specific configuration
trace_cflags = -DTRACE
trace_ldflags = 

[vector]
# Vector extension configuration for benchmarks starting with "vec-"
vector_rv32_arch = rv32gcv
vector_rv64_arch = rv64gcv
regular_rv32_arch = rv32gc  
regular_rv64_arch = rv64gc